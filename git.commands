===================================================================================Links=======================================================================================================
===================================================================================Commands===================================================================================================================
Let's take a moment to review the main concepts and commands from the lesson before moving on.

    Git branching allows users to experiment with different versions of a project by checking out separate branches to work on.

The following commands are useful in the Git branch workflow.

    git branch: Lists all a Git project's branches.
    git branch branch_name: Creates a new branch.
    git checkout branch_name: Used to switch from one branch to another.
    git merge branch_name: Used to join file changes from one branch to another.
    git branch -d branch_name: Deletes the branch specified.

=======================================================================================Workflow===============================================================================================================

The workflow for Git collaborations typically follows this order:

    Fetch and merge changes from the remote
    Create a branch to work on a new project feature
    Develop the feature on your branch and commit your work
    Fetch and merge from the remote again (in case new commits were made while you were working)
    Push your branch up to the remote for review

Steps 1 and 4 are a safeguard against merge conflicts, which occur when two branches contain file changes that cannot be merged with the git merge command. Step 5 involves git push, a command you will learn in the next exercise. 

git config --global user.email "dushyantjoshia@gmail.com"
https://guides.github.com/

===================================================================================================
1) checkout branch

git checkout -b LocalName origin/remotebranchname 

2) Best (and safest) way to merge a git branch into master

git checkout master
git pull origin master
git merge test
git push origin master
3) git remote -v
4) git push -f origin <branch>

======================================conflicts=====================================================
git commit -i myfile.php
